@model CogsMinimizer.Shared.Subscription
@{
    ViewBag.Title = "Settings";

}

@section Scripts
{
    <!-- all dependency scripts will be loaded here -->
    @Scripts.Render("~/bundles/jquery")
    <script>
        // In addition to calling controller action buttons click will cause setting cursor to wait while being over body and buttons
        $(document).ready(function () {
            $('.wait-crs').on('click', function () { $('body').css('cursor', 'wait'); $('.btn').css('cursor', 'wait'); })
        });

    </script>
}

@using (@Html.BeginForm("SaveSettings", "Subscription", FormMethod.Post))
{
    <h1>@ViewBag.Title</h1>

    <!-- make 2 text boxes for some subscription data value and user ID. otherwise neither subscription data nor user ID  aren't given to submitting controller method -->
    <h4>@Html.TextBoxFor(m => m.DisplayName, new { contenteditable = "false", style = "display : none" })</h4>
    <h4>@Html.TextBoxFor(m => m.Id, new { contenteditable = "false", style = "display : none" })</h4>
    <table class="table table-striped table-condensed table-hover">
        <tr>
            <td>
                <h4>Subscription ID</h4>
            </td>
            <td>
                <h4>@Model.Id</h4>
            </td>
        </tr>
        <tr>
            <td>
                <h4>Subscription name</h4>
            </td>
            <td>
                <h4>@Model.DisplayName</h4>
            </td>
        </tr>
        <tr>
            <td>
                <h4>Short claim period (days)</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.TextBoxFor(m => m.ExpirationIntervalInDays, new { style = "width:50px" })
            </td>
        </tr>
        <tr>
            <td>
                <h4>Long claim period (days)</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.TextBoxFor(m => m.ReserveIntervalInDays, new { style = "width:50px" })
            </td>
        </tr>
        <tr>
            <td>
                <h4>Unclaimed resources expire after (days)</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.TextBoxFor(m => m.ExpirationUnclaimedIntervalInDays, new { style = "width:50px" })
            </td>
        </tr>
        <tr>
            <td>
                <h4>Expired resources marked for delete after (days)</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.TextBoxFor(m => m.DeleteIntervalInDays, new { style = "width:50px" })
            </td>
        </tr>
        @*<tr>
            <td>
                <h4>Management level (action when resource expires)</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.DropDownListFor(m => m.ManagementLevel, managementLevelList)
            </td>
        </tr>*@
        <tr>
            <td><h2>Report options (daily emails)</h2></td>
            <td> </td>
        </tr>
        <tr>
            <td>
                <h4>Send email only if invalid resources found</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.CheckBoxFor(m => m.SendEmailOnlyInvalidResources)
            </td>
        </tr>
        <tr>
            <td>
                <h4>Email co-admins</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.CheckBoxFor(m => m.SendEmailToCoadmins)
            </td>
        </tr>
        <tr>
            <td>
                <h4>Send detailed reports</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.CheckBoxFor(m => m.SendDetailedReports)
            </td>
        </tr>
        <tr>
            <td>
                <h4>Additional recipients</h4>
            </td>
            <td style="vertical-align:middle">
                @Html.TextBoxFor(m => m.AdditionalRecipients, new { style = "width:300px" })
            </td>
        </tr>
    </table>
    <table>
        <tr>
            @if (Model.ConnectedBy == User.Identity.Name)
            {
                <td>
                    <button class="btn btn-success btn-xs wait-crs" type="submit">Save</button>
                    <small>&nbsp;&nbsp;</small>
                </td>
                <td>
                    @Html.ActionLink("Cancel", "CancelGetSettings", "Subscription",
                null, new { @class = "btn btn-warning btn-xs wait-crs" })
                </td>
            }
            else
            {
                <td>
                    @Html.ActionLink("Close", "CancelGetSettings", "Subscription",
                    null, new { @class = "btn btn-warning btn-xs wait-crs" })
                </td>
            }
        </tr>
    </table>
}

