@using CogsMinimizer.Shared
@model CogsMinimizer.Models.SubscriptionAnalyzeViewModel

@{
    ViewBag.Title = "Analyze Subscription";
}

<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/bootstrap-sortable.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/bootstrap-sortable.js"></script>
<h2>Subscription Resources</h2>
<h4>Subscription name: @Model.SubscriptionData.DisplayName</h4>
<h4>Subscription id: @Model.SubscriptionData.Id</h4>


<style>
.btn
{
    display : table-cell
}
</style>

@section Scripts
{
<script>

    $(document).ready(function () {

        $('input:radio').change(function () {
            FilterResources(this);
        });
    });

    function RedrawResourceTable() {
        if ($('#allResourcesRadio').is(":checked"))
        {
            FilterResources($('#allResourcesRadio'));
        }
        else if ($('#yourResourcesRadio').is(":checked"))
        {
            FilterResources($('#yourResourcesRadio'));
        }
        else if ($('#unclaimedResourcesRadio').is(":checked"))
        {
            FilterResources($('#unclaimedResourcesRadio'));
        }
    }

    function FilterResources(radioBtn) {
        if ($(radioBtn).attr('id') == 'allResourcesRadio')
        {
            $('#resourcesTable').find('tr').each(function () { $(this).show(); });
        }
        else if ($(radioBtn).attr('id') == 'yourResourcesRadio')
        {
            var currentUser = $.trim(@Html.Raw(Json.Encode(ViewData["UserId"])));
            $('#resourcesTable').find('tr').each(function ()
            {
                // skip table header
                if ($(this).find('th').length != 0) {
                    return;
                }

                var resourceOwner = $.trim($(this).find('td').eq(4).html());
                if (resourceOwner == currentUser)
                {
                    $(this).show();
                }
                else
                {
                    $(this).hide();
                }
            });
        }
        else if ($(radioBtn).attr('id') == 'unclaimedResourcesRadio')
        {
            $('#resourcesTable tr').each(function ()
            {
                // skip table header
                if ($(this).find('th').length != 0)
                {
                    return;
                }

                var confirmedUser = $(this).find('td #item_ConfirmedOwner').is(':checked');
                if (confirmedUser )
                {
                    $(this).hide();
                }
                else
                {
                    $(this).show();
                }
            });
        }
}

    function OnReserveResource(reserveBtn, resID, subscrID) {
        var $selectedRow = $(reserveBtn).parents("tr");
        $.ajax({
            url: "/Subscription/ReserveResource",
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                ResourceId: resID,
                SubscriptionId: subscrID
            }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                // Let's update expiration date, validity status, resource owner
                // Model at server is updated at controller method and will be used for table complete updating at refresh table

                if (data.ConfirmedOwner) {
                    $selectedRow.find('#item_ConfirmedOwner').prop('checked', 'checked');
                }
                else
                {
                    $selectedRow.find('#item_ConfirmedOwner').prop('checked', '');
                }

                $selectedRow.find('td').eq(4).html(data.Owner);
                $selectedRow.find('td').eq(6).html(data.ExpirationDate);
                $selectedRow.find('td').eq(7).html(data.Status);
                $(reserveBtn).prop('disabled', true);
                RedrawResourceTable();
            }
        });
    }

    function OnExtendResource(extendBtn, resID, subscrID) {
        var $selectedRow = $(extendBtn).parents("tr");
        $.ajax({
            url: "/Subscription/ExtendResource",
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                ResourceId:  resID,
                SubscriptionId: subscrID
            }),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                // Let's update expiration date, validity status, resource owner
                // Model at server is updated at controller method and will be used for table complete updating at refresh table

                if (data.ConfirmedOwner) {
                    $selectedRow.find('#item_ConfirmedOwner').prop('checked', 'checked');
                }
                else {
                    $selectedRow.find('#item_ConfirmedOwner').prop('checked', '');
                }

                $selectedRow.find('td').eq(4).html(data.Owner);
                $selectedRow.find('td').eq(6).html(data.ExpirationDate);
                $selectedRow.find('td').eq(7).html(data.Status);
                $(extendBtn).prop('disabled', true);
                RedrawResourceTable();
            }
            });
    }
</script>
}


<table>
    <tr>
        <td rowspan="3" style="padding-right : 5px">
<!--
            @Html.ActionLink("Extend Expired", "ExtendExpired",
                               new { SubscriptionId = Model.SubscriptionData.Id },
                               new { @class = "btn btn-info" })
-->
        </td>
        <td style="padding-left : 5px">
            @Html.RadioButton("resource filter", "All resources", true, new { id = "allResourcesRadio" }) All resources
        </td>
        </tr>
    <tr>
            <td style="padding-left : 5px">
            @Html.RadioButton("resource filter", "Your resources", false, new { id = "yourResourcesRadio" }) Your resources
        </td>
        </tr>
        <tr>
        <td style="padding-left : 5px">
            @Html.RadioButton("resource filter", "Unclaimed resources", false, new { id = "unclaimedResourcesRadio" })  Unclaimed resources
        </td>
       </tr>
</table>

<br/>
<br/>

<table class="table table-hover table-bordered table-striped table-condensed sortable" id="resourcesTable">
    <thead>
    <tr>
        <th style="display:none" id="confirmedOwnerColumn" data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.Resources.First().ConfirmedOwner)
        </th>
            <th id="nameColumn" data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.Resources.First().Name)
        </th>
            <th data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.Resources.First().Type)
        </th>
           <th data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.Resources.First().ResourceGroup)
        </th>
            <th data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.Resources.First().Owner)
        </th>
            <th data-defaultsign="month">
            @Html.DisplayNameFor(model => model.Resources.First().FirstFoundDate)
        </th>
            <th data-defaultsign="month">
            @Html.DisplayNameFor(model => model.Resources.First().ExpirationDate)
        </th>
            <th data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.Resources.First().Status)
        </th>
            <th data-defaultsort="disabled">
            Actions
        </th>
    </tr>
    </thead>

    @foreach (var item in Model.Resources)
    {
        string rowClass = item.Expired ? "alert alert - warning" : null;
        <tr class="@rowClass">
            <td style="display:none">
                @Html.CheckBoxFor(modelItem => item.ConfirmedOwner)
            </td>
            <td>
                @Html.Raw(HTMLUtilities.CreateAzureResourceAnchor(item.Name, item.AzureResourceIdentifier))            
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ResourceGroup)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owner)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstFoundDate)
            </td>
      <td>
                @Html.DisplayFor(modelItem => item.ExpirationDate)
            </td>
            <td >
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                <button class="btn-info btn-xs" onclick="OnExtendResource(this, '@item.Id', '@item.SubscriptionId')">Extend</button>
                <br />
                <button class="btn-success btn-xs" onclick="OnReserveResource(this, '@item.Id', '@item.SubscriptionId')">Reserve</button>
<!--
@if (Model.SubscriptionData.ManagementLevel == SubscriptionManagementLevel.ManualDelete && item.Expired)
{
                @Html.ActionLink("Delete", "Delete",
             new { SubscriptionId = item.SubscriptionId, resourceId = item.Id },
             new { @class = "btn btn-danger btn-xs" })
}
-->
            </td>
        </tr>
    }

</table>
