#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Cal12led by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#	maillle
# To enable this hook, rename this file to "pre-commit".ff

echo -e "Pre-commit-hook\n\n"

err="0"

echo "Check hard coded user name"
mail=$(grep -h -r --include "*.cs" "eviten@microsoft.com"  ../..)
maillen=${#mail}
if [[ $maillen -ge 15 ]]
then
	echo "Mail found!!!"
	err="1"
else
	echo "No mail found"
fi

echo  -e "\nCheck app id"
appid=$(grep -h -r --include "*.config" --include "*.cs" "ida:ClientID"  ../..)
#echo "$appid"
appidlen=${#appid}
if [[ $appidlen -ge 10 ]]
then
	echo "App ID found!!!"
	err="1"
else
	echo "No App ID found"
fi

echo  -e "\nCheck app password"
apppwd=$(grep -h -r --include "*.config" --include "*.cs" "ida:Password"  ../..)
#echo "$apppwd"
apppwdlen=${#apppwd}
if [[ $apppwdlen -ge 10 ]]
then
	echo "App Password found!!!"
	err="1"
else
	echo "No App Password found"
fi

echo -e "\nCheck connection string"
datacs=$(grep -h -r --include "*.config" "add name=.DataAccess"  ../..)
#echo "$datacs"
datacslen=${#datacs}
if [[ $datacslen -ge 10 ]]
then
	echo "Data connection string found!!!"
	err="1"
else
	echo "Data connection string not found"
fi

echo -e "\nCheck web job connection string"
wjcs=$(grep -h -r --include "*.config" "WebJobsDash"  ../..)
#echo "$wjcs"
wjcslen=${#wjcs}
if [[ $wjcslen -ge 10 ]]
then
	echo "Web job connection string found!!!"
	err="1"
else
	echo "Web job connection string not found"
fi

echo -e "\nCheck web job connection string 2"
wjcs2=$(grep -h -r --include "*.config" "WebJobsStorage"  ../..)
#echo "$wjcs2"
wjcslen2=${#wjcs2}
if [[ $wjcslen2 -ge 10 ]]
then
	echo "Web job connection string 2 found!!!"
	err="1"
else
	echo "Web job connection string 2 not found"
fi




if [[ $err -ne "0" ]]
then
	echo  -e  "\n\n\nErrors found!!!"
	exit 1
else
	echo -e "\n\n\nNo errors found"
fi
